steps:
  # Build backend Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/$PROJECT_ID/legalease-backend', './backend']
    dir: '.'

  # Push backend image to Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/legalease-backend']

  # Deploy backend to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'gcloud'
    args:
      - 'run'
      - 'deploy'
      - 'legalease-backend'
      - '--image=gcr.io/$PROJECT_ID/legalease-backend'
      - '--platform=managed'
      - '--region=us-central1'
      - '--allow-unauthenticated'
      - '--port=8080'
      - '--memory=2Gi'
      - '--cpu=2'
      - '--max-instances=10'
      - '--set-env-vars=ALLOWED_ORIGINS=*'
      - '--set-env-vars=MOCK_AI=true'
      - '--set-env-vars=GOOGLE_CLOUD_PROJECT=$PROJECT_ID'
      - '--set-env-vars=GOOGLE_CLOUD_LOCATION=us-central1'

  # Wait for backend to be ready
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        echo "Waiting for backend to be ready..."
        sleep 30
        BACKEND_URL=$$(gcloud run services describe legalease-backend --platform=managed --region=us-central1 --format="value(status.url)")
        echo "Backend URL: $$BACKEND_URL"

  # Build frontend
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        # Install Node.js 18
        curl -fsSL https://deb.nodesource.com/setup_18.x | bash -
        apt-get install -y nodejs
        
        # Verify Node.js installation
        node --version
        npm --version
        
        cd frontend
        
        # Install dependencies
        npm ci --legacy-peer-deps
        
        # Get backend URL dynamically
        BACKEND_URL=$$(gcloud run services describe legalease-backend --platform=managed --region=us-central1 --format="value(status.url)")
        echo "Building frontend with backend URL: $$BACKEND_URL"
        
        # Build frontend
        VITE_API_URL=$$BACKEND_URL npm run build
        
        # Verify build output
        ls -la dist/

  # Create Cloud Storage bucket if it doesn't exist
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        BUCKET_NAME="$${PROJECT_ID}-legalease-frontend"
        if ! gsutil ls -b gs://$$BUCKET_NAME 2>/dev/null; then
          echo "Creating bucket: gs://$$BUCKET_NAME"
          gsutil mb gs://$$BUCKET_NAME
        else
          echo "Bucket gs://$$BUCKET_NAME already exists"
        fi

  # Deploy frontend to Cloud Storage
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        BUCKET_NAME="$${PROJECT_ID}-legalease-frontend"
        echo "Deploying frontend to gs://$$BUCKET_NAME"
        gsutil -m cp -r frontend/dist/* gs://$$BUCKET_NAME/
        gsutil web set -m index.html -e 404.html gs://$$BUCKET_NAME/
        gsutil iam ch allUsers:objectViewer gs://$$BUCKET_NAME
        echo "Frontend deployed successfully!"
        echo "Frontend URL: https://storage.googleapis.com/$$BUCKET_NAME/index.html"

images:
  - 'gcr.io/$PROJECT_ID/legalease-backend'

options:
  logging: CLOUD_LOGGING_ONLY
  machineType: 'E2_HIGHCPU_8'
  substitution_option: 'ALLOW_LOOSE'
